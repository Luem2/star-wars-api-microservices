# on:
#     push:
#         branches:
#             - main
#     pull_request:
#         branches:
#             - main

# jobs:
#     build:
#         runs-on: ubuntu-latest

#         steps:
#             - name: Checkout repository
#               uses: actions/checkout@v2

#             - name: SSH into your remote machine
#               uses: appleboy/ssh-action@master
#               with:
#                   host: ${{ secrets.REMOTE_HOST }}
#                   username: ${{ secrets.REMOTE_USERNAME }}
#                   key: ${{ secrets.STARWARS_SSH_KEY }}
#                   port: 2222

#             - name: View repository
#               run: ls -la
#             # - name: Update repository on remote machine
#             #   run: git pull origin main

#             # - name: Restart Docker containers on remote machine
#             #   run: |
#             #      ssh ${{ secrets.REMOTE_USERNAME }}@${{ secrets.REMOTE_HOST }} 'docker compose down --rmi local && docker compose build --no-cache && docker compose up -d'

name: Pull and Rebuild Docker Containers

on:
    push:
        branches:
            - main

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: SSH into remote machine and pull changes
              uses: appleboy/ssh-action@v1.0.0
              with:
                  key: ${{ secrets.STARWARS_SSH_KEY }}
                  host: ${{ secrets.REMOTE_HOST }}
                  username: ${{ secrets.REMOTE_USERNAME }}
                  port: 2222
                  script: cd ./prueba/star-wars-api-microservices && docker compose down --rmi local && docker compose build --no-cache && docker compose up -d

            # - name: Rebuild Docker containers on remote machine
            #   uses: appleboy/ssh-action@v1.0.0
            #   with:
            #     ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
            #     host: ${{ secrets.REMOTE_HOST }}
            #     username: ${{ secrets.REMOTE_USERNAME }}
            #     passphrase: ${{ secrets.SSH_PASSPHRASE }}
            #     script: |
            #       cd /path/to/your/repo
            #       docker-compose up --build
